@inject IHttpContextAccessor accessor
@inject CartDI CartCounter
@rendermode InteractiveServer

<header class="bg-gray-800 text-white">
    <nav class="mx-auto flex w-[95%] items-center justify-between">
        <div>
            <NavLink href="/" class="cursor-pointer select-none pb-4 pt-4 font-bold text-[20px]">TechShop</NavLink>
        </div>
        <div class="flex gap-4">
            <div class="nav-links static left-0 top-[62px] flex min-h-fit w-auto items-center bg-gray-800 p-5">
                <ul class="flex flex-row items-center justify-center gap-8">
                    <li>
                        <NavLink class="hover:underline" href="/">PRODUCTS</NavLink>
                    </li>
                    <li>
                        <a class="hover:underline"
                        href='@($"Cart/{AuthenticatedUserId}")'>CART (@CartsCount)</a>
                    </li>
                </ul>
            </div>
            <div class="flex items-center gap-4">
                <AuthorizeView>
                    <Authorized>
                        <a href="Logout" class="bg-[#2e58d7] px-5 py-2 text-white hover:bg-[#416beb] active:bg-blue-800">Logout</a>
                    </Authorized>
                    <NotAuthorized>
                        <a href="Login" class="bg-[#2e58d7] px-5 py-2 text-white hover:bg-[#416beb] active:bg-blue-800">Login</a>
                    </NotAuthorized>
                </AuthorizeView> 

            </div>
        </div>
    </nav>
</header>

@code {
    private int AuthenticatedUserId;
    public int CartsCount { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        CartCounter.OnDataSent += ((count) => { CartsCount = count; StateHasChanged(); });

        AuthenticatedUserId = Convert.ToInt32(accessor.HttpContext!.User.FindFirstValue("UserId"));
        List<Cart>? CartProducts = await ApiRequest.GetData<Cart>(RequestURL.Carts, AuthenticatedUserId);
        CartsCount = CartProducts?.Count ?? 0;
    }
}