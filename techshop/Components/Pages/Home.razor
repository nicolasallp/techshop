@page "/"
@using System.Diagnostics
@rendermode InteractiveServer

<PageTitle>Home | TechShop</PageTitle>

<div class="flex w-[1250px] bg-gray-100">
    <div class="max-w-[220px] p-4">
        <div class="text-xl text-gray-700">
            <div class="items-center p-2.5">
                <h1 class="mb-2 text-lg font-bold text-gray-700">Price</h1>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterPrices(e, [1, 99.99m, 500])' id="checkbox-price-1" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-price-1" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">R$1 - R$99</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterPrices(e, [100, 299.99m, 500])' id="checkbox-price-2" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-price-2" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">R$100 - R$299</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterPrices(e, [300, 499.99m, 500])' id="checkbox-price-3" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-price-3" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">R$300 - R$499</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterPrices(e, [500, 500, 500])' id="checkbox-price-4" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-price-4" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">R$500+</label>
                </div>
                <p class="mb-1 mt-3 text-sm text-gray-600">Custom range</p>
                <div class="flex items-center gap-2">
                    <input type="text" id="first_name" class="block w-full border border-gray-300 bg-gray-50 px-1 py-2 text-base text-gray-900 outline-none focus:ring-blue-600 focus:border-blue-500" placeholder="$" />-
                    <input type="text" id="first_name" class="block w-full border border-gray-300 bg-gray-50 px-1 py-2 text-base text-gray-900 outline-none focus:ring-blue-600 focus:border-blue-500" placeholder="$" />
                </div>
            </div>
            <hr class="border-gray-300" />
            <div class="items-center p-2.5">
                <h1 class="mb-2 text-lg font-bold text-gray-700">Brands</h1>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterBrands(e, "Apple")' id="checkbox-brand-1" type="checkbox" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600" />
                    <label for="checkbox-brand-1" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">Apple</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterBrands(e, "Samsung")' id="checkbox-brand-2" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-brand-2" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">Samsung</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterBrands(e, "Xiaomi")' id="checkbox-brand-3" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-brand-3" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">Xiaomi</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterBrands(e, "Motorola")' id="checkbox-brand-4" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-brand-4" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">Motorola</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterBrands(e, "Sony")' id="checkbox-brand-5" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-brand-5" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">Sony</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterBrands(e, "Philips")' id="checkbox-brand-6" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-brand-6" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">Philips</label>
                </div>
            </div>
            <hr class="border-gray-300" />
            <div class="items-center p-2.5">
                <h1 class="mb-2 ml-1 text-lg font-bold text-gray-700">Rating</h1>
                <Rating Average="1" Count="-1" Class="mb-4 cursor-pointer hover:border hover:border-blue-600" />
                <Rating Average="2" Count="-1" Class="mb-4 cursor-pointer hover:border hover:border-blue-600" />
                <Rating Average="3" Count="-1" Class="mb-4 cursor-pointer hover:border hover:border-blue-600" />
                <Rating Average="4" Count="-1" Class="mb-4 cursor-pointer hover:border hover:border-blue-600" />
                <Rating Average="5" Count="-1" Class="mb-4 cursor-pointer hover:border hover:border-blue-600" />
            </div>
        </div>
    </div>
    <span class="h-full w-[1px] bg-gray-300"></span>
    <div class="w-full">
        <div>
            <div class="mx-4 mb-2 mt-6 flex items-center bg-gray-200 p-3">
                <ion-icon name="search" class="select-none text-2xl text-gray-700"></ion-icon>
                <input @oninput="SearchProducts" type="text" placeholder="Search product" class="ml-3 w-full bg-transparent text-[15px] text-gray-700 outline-none" />
            </div>
        </div>
        <div class="flex flex-wrap">
            @if (ProductsDisplayed != null)
            {
                foreach (Product product in ProductsDisplayed)
                {
                    <ProductCard Id="@product.Id" Name="@product.Name" Price="@product.Price" Image="@product.Image" />
                }
            }

        </div>
    </div>
</div>

@code {
    private List<Product>? Products;
    private List<Product>? ProductsFiltered;
    private List<Product>? ProductsDisplayed;

    protected override async Task OnInitializedAsync()
    {
        Products = await DataRequest.GetData<Product>(RequestURL.Products);
        ProductsDisplayed = Products;
    }

    private void SearchProducts(ChangeEventArgs e)
    {
        ProductsDisplayed = ProductsFiltered.Where(x =>
            x.Name.ToLower().Contains(e.Value.ToString().ToLower())).ToList();
    }

    private List<Product>? BrandsFilteredProducts;
    private List<string>? brands = new();
    private bool isBrandsFiltered;

    private void FilterBrands(ChangeEventArgs e, string brand)
    {
        ProductsFiltered = isPricesFiltered ? PricesFilteredProducts : Products;

        if ((bool)e.Value)
        {
            brands.Add(brand);
        }
        else
        {
            brands.Remove(brand);
        }

        if (brands.Count > 0)
        {
            isBrandsFiltered = true;
            ProductsDisplayed = ProductsFiltered.Where(x => brands.Contains(x.Brand)).ToList();
            BrandsFilteredProducts = Products.Where(x => brands.Contains(x.Brand)).ToList();
            return;
        }

        isBrandsFiltered = false;
        ProductsDisplayed = isPricesFiltered ? PricesFilteredProducts : Products;
    }

    private List<Product>? PricesFilteredProducts;
    private List<decimal[]>? pricesList = new();
    private bool isPricesFiltered;


    private void FilterPrices(ChangeEventArgs e, decimal[] prices)
    {
        ProductsFiltered = isBrandsFiltered ? BrandsFilteredProducts : Products;

        if ((bool)e.Value)
        {
            pricesList.Add(prices);
        }
        else
        {
            pricesList.Remove(pricesList.FirstOrDefault(p => p.SequenceEqual(prices)));
        }

        if (pricesList.Count > 0)
        {
            isPricesFiltered = true;
            ProductsDisplayed = ProductsFiltered.Where((x) =>
            {
                foreach (decimal[] values in pricesList)
                {
                    if (x.Price >= values[0] && x.Price <= values[1])
                    {
                        return true;
                    }
                }
                return false;
            }).ToList();

            PricesFilteredProducts = Products.Where((x) =>
            {
                foreach (decimal[] values in pricesList)
                {
                    if (x.Price >= values[0] && x.Price <= values[1])
                    {
                        return true;
                    }
                }
                return false;
            }).ToList();
            return;
        }

        isPricesFiltered = false;
        ProductsDisplayed = isBrandsFiltered ? BrandsFilteredProducts : Products;
    }
}