@page "/"
@using System.Diagnostics
@using System.Globalization
@rendermode InteractiveServer

<PageTitle>Home | TechShop</PageTitle>

<div class="flex w-[1250px] bg-gray-100">
    <div class="max-w-[220px] p-4">
        <div class="text-xl text-gray-700">
            <div class="items-center p-2.5">
                <h1 class="mb-2 text-lg font-bold text-gray-700">Price</h1>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterProducts<decimal[]>(e, [1, 99.99m])' id="checkbox-price-1" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-price-1" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">R$1 - R$99</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterProducts<decimal[]>(e, [100, 299.99m])' id="checkbox-price-2" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-price-2" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">R$100 - R$299</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterProducts<decimal[]>(e, [300, 499.99m])' id="checkbox-price-3" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-price-3" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">R$300 - R$499</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input id="checkbox-price-4" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-price-4" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">R$500+</label>
                </div>
                <p class="mb-1 mt-3 text-sm text-gray-600">Custom range</p>
                <div class="flex items-center gap-2">
                    <input type="text" id="first_name" class="block w-full border border-gray-300 bg-gray-50 px-1 py-2 text-base text-gray-900 outline-none focus:ring-blue-600 focus:border-blue-500" placeholder="$" />-
                    <input type="text" id="first_name" class="block w-full border border-gray-300 bg-gray-50 px-1 py-2 text-base text-gray-900 outline-none focus:ring-blue-600 focus:border-blue-500" placeholder="$" />
                </div>
            </div>
            <hr class="border-gray-300" />
            <div class="items-center p-2.5">
                <h1 class="mb-2 text-lg font-bold text-gray-700">Brands</h1>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterProducts(e, "Apple")' id="checkbox-brand-1" type="checkbox" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600" />
                    <label for="checkbox-brand-1" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">Apple</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterProducts(e, "Samsung")' id="checkbox-brand-2" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-brand-2" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">Samsung</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterProducts(e, "Xiaomi")' id="checkbox-brand-3" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-brand-3" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">Xiaomi</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterProducts(e, "Motorola")' id="checkbox-brand-4" type="checkbox" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600" />
                    <label for="checkbox-brand-4" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">Motorola</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterProducts(e, "Sony")' id="checkbox-brand-5" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-brand-5" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">Sony</label>
                </div>
                <div class="mb-2 flex cursor-pointer items-center">
                    <input @onchange='(e) => FilterProducts(e, "Philips")' id="checkbox-brand-6" type="checkbox" value="" class="h-4 w-4 border-gray-300 bg-gray-100 text-blue-600">
                    <label for="checkbox-brand-6" class="ms-2 cursor-pointer text-sm font-medium text-gray-500">Philips</label>
                </div>
            </div>
            <hr class="border-gray-300" />
            <div class="items-center p-2.5">
                <h1 class="mb-2 ml-1 text-lg font-bold text-gray-700">Rating</h1>
                <Rating Average="1" Count="-1" Class="mb-4 cursor-pointer hover:border hover:border-blue-600" />
                <Rating Average="2" Count="-1" Class="mb-4 cursor-pointer hover:border hover:border-blue-600" />
                <Rating Average="3" Count="-1" Class="mb-4 cursor-pointer hover:border hover:border-blue-600" />
                <Rating Average="4" Count="-1" Class="mb-4 cursor-pointer hover:border hover:border-blue-600" />
                <Rating Average="5" Count="-1" Class="mb-4 cursor-pointer hover:border hover:border-blue-600" />
            </div>
        </div>
    </div>
    <span class="h-full w-[1px] bg-gray-300"></span>
    <div class="w-full">
        <div>
            <div class="mx-4 mb-2 mt-6 flex items-center bg-gray-200 p-3">
                <ion-icon name="search" class="select-none text-2xl text-gray-700"></ion-icon>
                <input @oninput="SearchProducts" type="text" placeholder="Search product" class="ml-3 w-full bg-transparent text-[15px] text-gray-700 outline-none" />
            </div>
        </div>
        <div class="flex flex-wrap">
            @if (DisplayedProducts != null)
            {
                foreach (Product product in DisplayedProducts)
                {
                    <ProductCard Id="@product.Id" Name="@product.Name" Price="@product.Price" Image="@product.Image" />
                }
            }

        </div>
    </div>
</div>

@code {
    private List<Product>? Products;
    private List<Product>? DisplayedProducts;

    private Dictionary<string, bool> PricesDic = new()
    {
        {"1.00,99.99", false},
        {"100.00,299.99", false},
        { "300.00,499.99", false}
    };

    private Dictionary<string, bool> BrandsDic = new()
    {
        {"Apple", false},
        {"Samsung", false},
        {"Xiaomi", false},
        {"Motorola", false},
        {"Sony", false},
        {"Philips", false}
    };

    protected override async Task OnInitializedAsync()
    {
        Products = await DataRequest.GetData<Product>(RequestURL.Products);
        DisplayedProducts = Products;
    }

    private void SearchProducts(ChangeEventArgs e)
    {
        DisplayedProducts = FilteredProducts.Where(x =>
            x.Name.ToLower().Contains(e.Value.ToString().ToLower())).ToList();
    }

    private List<Product>? FilteredProducts;
    private List<string>? CheckedPrices = new();
    private List<string>? CheckedBrands = new();

    private void FilterProducts<TKey>(ChangeEventArgs e, TKey productKey)
    {
        if (productKey is decimal[] priceKey)
        {
            PricesDic[string.Join(",", priceKey.Select(p => p.ToString("0.00", CultureInfo.InvariantCulture)))] = (bool)e.Value;
        }
        else if (productKey is string brandKey)
        {
            BrandsDic[brandKey] = (bool)e.Value;
        }

        FilteredProducts = Products;

        foreach(KeyValuePair<string, bool> prices in PricesDic)
        {
            if (prices.Value)
            {
                CheckedPrices.Add(prices.Key);
            }
        }

        foreach (KeyValuePair<string, bool> brands in BrandsDic)
        {
            if (brands.Value)
            {
                CheckedBrands.Add(brands.Key);
            }
        }
        
        if (CheckedPrices.Count > 0)
        {
            FilteredProducts = FilteredProducts.Where((x) =>
            {
                foreach (string values in CheckedPrices)
                {
                    decimal[] prices = values.Split(",").Select((p => Convert.ToDecimal(p, CultureInfo.InvariantCulture))).ToArray();
                    if (x.Price >= prices[0] && x.Price <= prices[1])
                    {
                        return true;
                    }
                }
                return false;
            }).ToList();
        }

        if (CheckedBrands.Count > 0)
        {
            FilteredProducts = FilteredProducts.Where(x => CheckedBrands.Contains(x.Brand)).ToList();
        }

        if (CheckedPrices.Count == 0 && CheckedBrands.Count == 0)
        {
            DisplayedProducts = Products;
            return;
        }

        CheckedPrices.Clear();
        CheckedBrands.Clear();
        DisplayedProducts = FilteredProducts;
    }
}