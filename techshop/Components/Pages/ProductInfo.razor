@page "/ProductInfo/{Id}"
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer
@inject IHttpContextAccessor accessor
@inject CartState CartCounter
@inject NavigationManager navigation

<PageTitle>@Product!.Name | Techshop</PageTitle>

<div class="w-[1250px] bg-gray-100">
    @if (Product != null) 
    {
        <div class="mt-12 flex h-fit w-full justify-center">
            <img class="mr-6 size-[500px] border border-gray-200 bg-white object-scale-down p-6" src='@($"{RequestURL.Resources}/{Product.Image}")' />
            <div class="w-[500px]">
                <h1 class="text-2xl font-bold">@Product.Name</h1>
                <div class="my-2">
                    <Rating Average="4" Count="122" />
                </div>
                <div class="my-6">
                    <span class="text-3xl font-semibold text-blue-950">USD $@Product.Price</span>
                </div>
                <p class="text-gray-500">@Product.Description</p>
                <div class="mt-12 w-fit">
                    <p class="mb-2 text-center text-gray-500">Quantity</p>
                    <div>
                        <button @onclick="() => Quantity = Quantity > 1 ? Quantity-1 : 1" class="rounded bg-gray-800 px-[12px] font-bold text-white text-[23px] hover:bg-gray-700">-</button>
                        <span class="mx-4 text-lg font-semibold">@Quantity</span>
                        <button @onclick="() => Quantity++" class="rounded bg-blue-700 px-2 font-bold text-white text-[23px] hover:bg-blue-600">+</button>
                    </div>
                    <button @onclick="CartHandler" class="mt-2 @(IsInCart ? "bg-gray-200 text-blue-700 hover:bg-gray-300" : "bg-blue-700 text-white hover:bg-blue-600") w-full rounded py-3.5 text-center text-sm font-medium focus:outline-offset-2 focus:outline-black">@(IsInCart ? "Added to cart" : "Add to cart")</button>
                </div>
            </div>
        </div>
        <hr class="my-10 border-gray-300" />
        <div class="flex flex-col items-center">
            <h2 class="text-2xl font-semibold text-blue-950">Reviews (122)</h2>
            <div class="flex w-full flex-col gap-6 p-6">
                <ProductReview />
                <ProductReview />
                <ProductReview />
                <ProductReview />
                <ProductReview />
            </div>
            <nav aria-label="Page navigation example" class="mb-6">
                <ul class="inline-flex -space-x-px text-sm">
                    <li>
                        <a href="#" class="flex h-8 items-center justify-center border border-gray-300 bg-blue-700 px-3 leading-tight text-white hover:bg-blue-600">&lt;</a>
                    </li>
                    <li>
                        <a href="#" class="flex h-8 items-center justify-center border border-gray-300 bg-white px-3 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700">1</a>
                    </li>
                    <li>
                        <a href="#" class="flex h-8 items-center justify-center border border-gray-300 bg-white px-3 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700">2</a>
                    </li>
                    <li>
                        <a href="#" aria-current="page" class="flex h-8 items-center justify-center border border-gray-300 bg-blue-50 px-3 text-blue-600 hover:bg-blue-100 hover:text-blue-700">3</a>
                    </li>
                    <li>
                        <a href="#" class="flex h-8 items-center justify-center border border-gray-300 bg-white px-3 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700">4</a>
                    </li>
                    <li>
                        <a href="#" class="flex h-8 items-center justify-center border border-gray-300 bg-white px-3 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700">5</a>
                    </li>
                    <li>
                        <a href="#" class="flex h-8 items-center justify-center border border-gray-300 bg-blue-700 px-3 leading-tight text-white hover:bg-blue-600">&gt;</a>
                    </li>
                </ul>
            </nav>
        </div>
    }
</div>

@code {
    [Parameter]
    public string? Id { get; set; }

    private Product? Product = new();
    private CartProduct? CartProduct = new();
    private List<CartProduct>? CartProducts = new();
    private bool IsInCart;
    private int Quantity = 1;

    string? userId;

    protected override async Task OnInitializedAsync()
    {
        userId = accessor.HttpContext?.User.FindFirstValue("UserId");
        Product = await ApiRequest.GetDataById<Product>(RequestURL.Products, Id!);
        if (userId != null)
        {
            CartProducts = await ApiRequest.GetData<CartProduct>(RequestURL.CartProducts, userId);
            CartProduct = CartProducts!.Where((e) => e.ProductId == Product!.Id).FirstOrDefault();
            IsInCart = CartProducts!.Any(c => c.ProductId == Product!.Id);
        }

        if (IsInCart && CartProduct != null)
        {
            Quantity = CartProduct.Quantity;
        }
    }

    private async Task CartHandler()
    {
        if (userId == null)
        {
            navigation.NavigateTo("/Login");
            return;
        }
        if (!IsInCart)
        {
            await CartManager.AddToCart(userId, Product, CartProduct, CartCounter, Quantity);
        }
        else
        {
            await CartManager.DeleteCartProduct(userId, CartProduct, CartCounter);
            Quantity = 1;
        }
        IsInCart = !IsInCart;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("eval", "window.scrollTo(0, 0);");
        }
    }

}