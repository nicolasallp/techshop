@page "/Add"
@using Microsoft.AspNetCore.Authorization

@inject IJSRuntime JS
@rendermode InteractiveServer
@attribute [Authorize]

<div class="flex h-screen bg-gray-100">
    <Sidebar Selected="0" />
    <div class="m-12 w-[350px]">
        <p class="mb-2 text-gray-600">Choose the product image.</p>
        <div class="flex h-[300px] w-full items-center justify-center">
            <label for="filezone" class="border-2 flex h-full w-full cursor-pointer flex-col items-center justify-center border-dashed border-gray-300 bg-gray-50 hover:bg-gray-200 @(isImgChosen ? "hidden" : "")">
                <div class="flex flex-col items-center justify-center pb-6 pt-5">
                    <svg class="mb-4 h-8 w-8 text-gray-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 16">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2" />
                    </svg>
                    <p class="mb-2 text-sm text-gray-500"><span class="font-semibold">Click to upload</span></p>
                    <p class="text-xs text-gray-500">PNG, JPG or BMP</p>
                </div>
                <InputFile id="filezone" class="hidden" @ref="inputFile" OnChange="PreviewImage"></InputFile>
            </label>
            <div class="h-[300px] w-full @(isImgChosen ? "" : "hidden")">
                <img @ref="imgElement" class="size-[300px] border border-gray-200 bg-white object-scale-down" />
            </div>
        </div>
        <label for="filezone"><div class="mb-6 mt-2 w-fit cursor-pointer border border-gray-200 bg-white p-1 px-2 hover:bg-gray-100 @(isImgChosen ? "" : "hidden")">Change image</div></label>
        <div class="mb-3 mt-6">
            <label for="name" class="mb-1 block text-sm font-medium text-gray-700">Product name</label>
            <input type="text" id="name" class="block w-full border border-gray-300 bg-gray-50 p-2.5 font-bold text-gray-800" required />
        </div>
        <div class="mb-3">
            <label for="desc" class="mb-1 block text-sm font-medium text-gray-700">Product description</label>
            <textarea type="text" id="desc" class="block h-[120px] w-full border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-800" required />
        </div>
        <div class="flex gap-4">
            <div class="mb-3">
                <label for="price" class="mb-1 block text-sm font-medium text-gray-700">Price</label>
                <div class="flex items-center">
                    <span class="mr-2">$</span>
                    <input type="text" id="price" class="block w-[100px] border border-gray-300 bg-gray-50 p-2.5 font-bold text-gray-800" required />
                </div>
            </div>
            <div class="mb-3">
                <label for="brand" class="mb-1 block text-sm font-medium text-gray-700">Brand</label>
                <input type="text" id="brand" class="block w-full border border-gray-300 bg-gray-50 p-2.5 text-gray-800" required />
            </div>
        </div>
        <button class="mt-4 w-full bg-gray-800 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-gray-700 active:bg-gray-900">Add product</button>
    </div>
</div>

<script>
    window.previewImage = (inputElem, imgElem) => {
        const url = URL.createObjectURL(inputElem.files[0]);
        imgElem.addEventListener('load', () => URL.revokeObjectURL(url), { once: true });
        imgElem.src = url;
    }
</script>

@code {
    private InputFile? inputFile;
    private ElementReference imgElement;
    private bool isImgChosen = false;

    private async Task PreviewImage()
    {
        isImgChosen = true;
        await JS.InvokeVoidAsync("previewImage", inputFile!.Element, imgElement);
    }
}